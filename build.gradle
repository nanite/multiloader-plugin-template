import dev.nanite.mlp.tasks.SingleOutputJar

plugins {
    id("dev.nanite.mlp") version("0.0.3")
    id("java")

    id("fabric-loom") version("1.3.9") apply(false)
    id("net.minecraftforge.gradle") version("6.0.+") apply(false)
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

multiLoader.root() {
    minecraftVersion.set(project.property("minecraft_version"))
    modID.set(project.property("mod_id"))
    singleOutputJar.set(true)
    splitSources.set(true)
}

allprojects {
    def isSnapshot = providers.environmentVariable('SNAPSHOT').is("true")
    version = "${mod_version}+mc${minecraft_version}${isSnapshot ? '-SNAPSHOT' : ''}"
    setArchivesBaseName("${mod_name}-${project.name}".toLowerCase())
    group = project.property("group")
}

subprojects {
    apply plugin: 'dev.nanite.mlp'
    apply plugin: 'maven-publish'

    project.sourceSets.main.resources.srcDir(project.file('src/generated/resources'))

    base {
        archivesName = "${mod_name}-${project.name}".toLowerCase()
    }

    tasks.withType(ProcessResources).configureEach {
        outputs.upToDateWhen { false }
    }

    repositories {
        mavenLocal()
        maven {
            name = "Creeperhost"
            url = uri("https://maven.creeperhost.net/")
        }
    }

//    publishing {
//
//        publications {
//            mavenJava(MavenPublication) {
//                groupId project.group
//                artifactId project.getArchivesBaseName()
//            }
//        }
//    }

}

tasks.register("singleJar", SingleOutputJar.class) {
    getArchiveIdentifier().set("${project.property("mod_name")}ML")
    getOutput().set(project.file("build/libs/${project.property("mod_name")}-${project.version}.jar"))
}

